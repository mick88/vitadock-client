from requests.models import Response
from vitadock_client.api_client import MODULE_CARDIODOCKS, VitadockClient

__author__ = 'Michal'

MOCK_RESPONSES = {
    MODULE_CARDIODOCKS: u"""[
  {
    "systole": 143,
    "diastole": 101,
    "pulse": 90,
    "systoleTargetMin": 0,
    "systoleTargetMax": 300,
    "diastoleTargetMin": 0,
    "diastoleTargetMax": 300,
    "pulseTargetMin": 40,
    "pulseTargetMax": 255,
    "type": 0,
    "arrhythmic": 0,
    "activityStatus": 2,
    "mood": 0,
    "note": "",
    "moduleSerialId": "[Autogenerated Item]",
    "id": "a9f0e8a2-bbdd-49ae-ac2d-aefb28e07c7f",
    "active": true,
    "version": 1,
    "measurementDate": 1441366858094,
    "updatedDate": 1441366858093
  },
  {
    "systole": 132,
    "diastole": 99,
    "pulse": 90,
    "systoleTargetMin": 0,
    "systoleTargetMax": 300,
    "diastoleTargetMin": 0,
    "diastoleTargetMax": 300,
    "pulseTargetMin": 40,
    "pulseTargetMax": 255,
    "type": 0,
    "arrhythmic": 0,
    "activityStatus": 1,
    "mood": 2,
    "note": "",
    "moduleSerialId": "[Autogenerated Item]",
    "id": "525609a0-d9c2-405c-8e5a-93c524839225",
    "active": true,
    "version": 1,
    "measurementDate": 1441366880314,
    "updatedDate": 1441366880314
  },
  {
    "systole": 148,
    "diastole": 103,
    "pulse": 90,
    "systoleTargetMin": 0,
    "systoleTargetMax": 300,
    "diastoleTargetMin": 0,
    "diastoleTargetMax": 300,
    "pulseTargetMin": 40,
    "pulseTargetMax": 255,
    "type": 1,
    "arrhythmic": 0,
    "activityStatus": 2,
    "mood": 1,
    "note": "",
    "moduleSerialId": "[Autogenerated Item]",
    "id": "602729cb-ef3f-4ec2-80c8-4184ea79c440",
    "active": true,
    "version": 1,
    "measurementDate": 1441366881898,
    "updatedDate": 1441366881898
  },
  {
    "systole": 131,
    "diastole": 96,
    "pulse": 90,
    "systoleTargetMin": 0,
    "systoleTargetMax": 300,
    "diastoleTargetMin": 0,
    "diastoleTargetMax": 300,
    "pulseTargetMin": 40,
    "pulseTargetMax": 255,
    "type": 1,
    "arrhythmic": 1,
    "activityStatus": 1,
    "mood": 1,
    "note": "super!",
    "moduleSerialId": "[Autogenerated Item]",
    "id": "69b9b1f6-120b-4bd5-9c87-27db5c9ce9d2",
    "active": true,
    "version": 1,
    "measurementDate": 1441366882748,
    "updatedDate": 1441366882748
  },
  {
    "systole": 133,
    "diastole": 97,
    "pulse": 90,
    "systoleTargetMin": 0,
    "systoleTargetMax": 300,
    "diastoleTargetMin": 0,
    "diastoleTargetMax": 300,
    "pulseTargetMin": 40,
    "pulseTargetMax": 255,
    "type": 1,
    "arrhythmic": 0,
    "activityStatus": 3,
    "mood": 2,
    "note": "",
    "moduleSerialId": "[Autogenerated Item]",
    "id": "83a6ff30-9c4c-4162-840b-5c058798e326",
    "active": true,
    "version": 1,
    "measurementDate": 1441366883379,
    "updatedDate": 1441366883379
  }
]""",
}


class MockVitadockClient(VitadockClient):
    def get(self, module_name, **get_params):
        try:
            response = Response()
            response._content = MOCK_RESPONSES[module_name]
            response.status_code = 200
            return response
        except KeyError:
            raise KeyError(u'Module {} not mocked!'.format(module_name))
